name: Release Workflow
'on':
  pull_request:
    branches: 
      - master
    types:
      - closed
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
        
      - name: Get current version
        id: get_version
        run: echo "VERSION_BUMP=$(grep -Po "(?<=__version__ = ')[^']+" ./release/__init__.py)" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: get_previous_tag
        run: |
          tags=$(curl -s "https://api.github.com/repos/${{ github.repository }}/tags" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
          echo "tags=$tags"
          previous_tag=$(echo "$tags" | grep -oP '(?<="name": ")[^"]+' | head -n 1)
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT

      - name: Create tag
        id: create_tag
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          version=${{ steps.get_version.outputs.VERSION_BUMP }}
          previous_tag=${{ steps.get_previous_tag.outputs.previous_tag }}
          tag="$version"
          git config --local user.email "yash.b@sigzen.com"
          git config --local user.name "yash-sigzen"

          git tag $tag
          git push origin $tag
          
          # Replace with your actual changelog URL
          changelog_url="https://github.com/Sigzen-Team/release/compare/$previous_tag...$version"
          echo "changelog_url" = $previous_tag >> $GITHUB_OUTPUT

          body="Changelog: [$changelog_url]($changelog_url)"
          echo "body=$body" >> $GITHUB_OUTPUT

          commit_messages=$(git log --pretty=format:"%s" -- $previous_tag...$version)
          echo "commit_messages=$commit_messages" >>$GITHUB_OUTPUT

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ steps.get_version.outputs.VERSION_BUMP }}"
          release_name: "${{ steps.get_version.outputs.VERSION_BUMP }}"
          body: |
            Changes in this release:
            -Log Data 
            -${{ steps.create_tag.outputs.commit_messages}}
            -Change Log
            -${{ steps.create_tag.outputs.body}}
